version: appveyor.{build}

platform:
  - Win32
#  - x64

os:
 - Visual Studio 2013
# - Visual Studio 2015

configuration:
  - Release
#  - Debug

environment:
  SDL_AUDIODRIVER: dummy

cache:
  - C:\ACE -> .appveyor.yml
  - C:\YARP -> .appveyor.yml
  - C:\SDL2 -> .appveyor.yml

init:
  # System related variables
  - cmd: set CMAKE_GENERATOR=Visual Studio 12 2013
  - cmd: if "%PLATFORM%"=="x64" set CMAKE_GENERATOR=%CMAKE_GENERATOR% Win64
  - cmd: echo CMAKE_GENERATOR=%CMAKE_GENERATOR%

  - cmd: set SYSTEM_ARCH=%PLATFORM%
  - cmd: if "%PLATFORM%"=="Win32" set SYSTEM_ARCH=x86
  - cmd: echo SYSTEM_ARCH=%SYSTEM_ARCH%

  - cmd: set SYSTEM_ARCH_ZBAR=x86_64
  - cmd: if "%PLATFORM%"=="Win32" set SYSTEM_ARCH_ZBAR=i686
  - cmd: echo SYSTEM_ARCH_ZBAR=%SYSTEM_ARCH_ZBAR%

  # Dependency version tags
  - cmd: set ACE_LATEST=6.4.2
  - cmd: set SDL2_LATEST=2.0.5
  - cmd: set SDL2_IMAGE_LATEST=2.0.1
  - cmd: set SDL2_TTF_LATEST=2.0.14
  - cmd: set SDL2_MIXER_LATEST=2.0.1
  - cmd: set ZBAR_LATEST=0.10-rd1

  # Download/clone paths and URLs
  - cmd: set DOWNLOADS_PATH=C:\downloads
  - cmd: set REPOS_PATH=C:\repos

  - cmd: set ACE_DOWNLOAD_URL=http://download.dre.vanderbilt.edu/previous_versions/ACE-%ACE_LATEST%.zip
  - cmd: set YARP_CLONE_URL=https://github.com/robotology/yarp.git
  - cmd: set SDL2_DOWNLOAD_URL=https://www.libsdl.org/release/SDL2-devel-%SDL2_LATEST%-VC.zip
  - cmd: set SDL2_IMAGE_DOWNLOAD_URL=https://www.libsdl.org/projects/SDL_image/release/SDL2_image-devel-%SDL2_IMAGE_LATEST%-VC.zip
  - cmd: set SDL2_TTF_DOWNLOAD_URL=https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-devel-%SDL2_TTF_LATEST%-VC.zip
  - cmd: set SDL2_MIXER_DOWNLOAD_URL=https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-devel-%SDL2_MIXER_LATEST%-VC.zip
  - cmd: set ZBAR_DOWNLOAD_URL=https://github.com/asrob-uc3m/ZBar/releases/download/%ZBAR_LATEST%/zbar-%ZBAR_LATEST%-%SYSTEM_ARCH_ZBAR%-setup.exe

  # Print some useful informations:
  - cmd: set
  - cmd: cmake --version
  - cmd: msbuild /version

install:
  # Create folders
  - cmd: md %DOWNLOADS_PATH%
  - cmd: md %REPOS_PATH%

  # Download and build ACE (if not in cache)
  - ps: >-
        if (Test-Path -Path "C:\ACE") {
            Write-Host "ACE found in cache"
        } else {
            Write-Host "ACE not in cache, running download and build step..."
            Write-Host "Downloading $env:ACE_DOWNLOAD_URL"
            Start-FileDownload "$env:ACE_DOWNLOAD_URL" -FileName "$env:DOWNLOADS_PATH\ace.zip"
            7z x -y -o"$env:DOWNLOADS_PATH" "$env:DOWNLOADS_PATH\ace.zip"
            Add-Content "$env:DOWNLOADS_PATH\ACE_wrappers\ace\config.h" "#include `"ace/config-win32.h`""
            msbuild "$env:DOWNLOADS_PATH\ACE_wrappers\ACE_wrappers_vc12.sln" /m /v:m
            Write-Host "Copying selected contents of $env:DOWNLOADS_PATH\ACE_wrappers to C:\ACE"
            robocopy "$env:DOWNLOADS_PATH\ACE_wrappers\ace" C:\ACE\ace /e /xd "$env:DOWNLOADS_PATH\ACE_wrappers\ace\$env:CONFIGURATION" /ns /ns /nfl /ndl /njh
            xcopy "$env:DOWNLOADS_PATH\ACE_wrappers\lib" C:\ACE\lib /e /i /y /q
        }
  - cmd: set ACE_ROOT=C:\ACE
  - cmd: set PATH=%PATH%;%ACE_ROOT%\lib

  # Clone and build YARP (if not in cache)
  - ps: >-
        if (Test-Path -Path "C:\YARP") {
            Write-Host "YARP found in cache"
        } else {
            Write-Host "YARP not in cache, running clone and build step..."
            Write-Host "Cloning $env:YARP_CLONE_URL"
            git clone -q --branch=master "$env:YARP_CLONE_URL" "$env:REPOS_PATH\yarp"
            cmake -H"$env:REPOS_PATH\yarp" -B"$env:REPOS_PATH\yarp\build" -G"$env:CMAKE_GENERATOR" -DCMAKE_INSTALL_PREFIX:PATH=C:\YARP
            cmake --build "$env:REPOS_PATH\yarp\build" --config "$env:CONFIGURATION" -- /m /v:m
            cmake --build "$env:REPOS_PATH\yarp\build" --config "$env:CONFIGURATION" --target INSTALL -- /m /v:m
        }
  - cmd: set YARP_DIR=C:\YARP\cmake
  - cmd: set PATH=%PATH%;C:\YARP\bin

  # Download and extract SDL2 libraries (if not in cache)
  - ps: >-
        if (Test-Path -Path "C:\SDL2") {
            Write-Host "SDL2 found in cache"
        } else {
            Write-Host "SDL2 not in cache, running download and extract step..."
            Write-Host "Downloading $env:SDL2_DOWNLOAD_URL"
            Start-FileDownload "$env:SDL2_DOWNLOAD_URL" -FileName "$env:DOWNLOADS_PATH\sdl2.zip"
            Write-Host "Downloading $env:SDL2_IMAGE_DOWNLOAD_URL"
            Start-FileDownload "$env:SDL2_IMAGE_DOWNLOAD_URL" -FileName "$env:DOWNLOADS_PATH\sdl2_image.zip"
            Write-Host "Downloading $env:SDL2_TTF_DOWNLOAD_URL"
            Start-FileDownload "$env:SDL2_TTF_DOWNLOAD_URL" -FileName "$env:DOWNLOADS_PATH\sdl2_ttf.zip"
            Write-Host "Downloading $env:SDL2_MIXER_DOWNLOAD_URL"
            Start-FileDownload "$env:SDL2_MIXER_DOWNLOAD_URL" -FileName "$env:DOWNLOADS_PATH\sdl2_mixer.zip"
            7z x -y -o"$env:DOWNLOADS_PATH\SDL2_temp" "$env:DOWNLOADS_PATH\sdl2*.zip"
            Write-Host "Copying contents of $env:DOWNLOADS_PATH\SDL2_temp to C:\SDL2"
            Get-ChildItem -Directory "$env:DOWNLOADS_PATH\SDL2_temp" | ?{ $_.PSIsContainer } | ForEach-Object {
                xcopy $_.FullName C:\SDL2 /e /i /y /q
            }
        }
  - cmd: set SDL2DIR=C:\SDL2
  - cmd: set PATH=%PATH%;%SDL2DIR%\lib\%SYSTEM_ARCH%

  # Download and install ZBar
  - cmd: echo Downloading %ZBAR_DOWNLOAD_URL%
  - cmd: appveyor DownloadFile "%ZBAR_DOWNLOAD_URL%" -FileName "%DOWNLOADS_PATH%\zbar.exe"
  - cmd: start "" /WAIT "%DOWNLOADS_PATH%\zbar.exe" /S /D=C:\ZBar
  - cmd: timeout 10
  - cmd: set ZBAR_DIR=C:\ZBar
  - cmd: set PATH=%PATH%;%ZBAR_DIR%\bin

before_build:
  - cmd: echo Configuring project %APPVEYOR_PROJECT_NAME%
  - cmd: cmake -H"%APPVEYOR_BUILD_FOLDER%" -B"%APPVEYOR_BUILD_FOLDER%\build" -G"%CMAKE_GENERATOR%" -DCMAKE_INSTALL_PREFIX:PATH="%APPVEYOR_BUILD_FOLDER%\install"

build:
  project: build\robotDevastation.sln
  parallel: false
  verbosity: minimal

after_build:
  - cmd: cmake --build "%APPVEYOR_BUILD_FOLDER%\build" --config "%CONFIGURATION%" --target INSTALL -- /v:m
  - cmd: set YARP_DATA_DIRS=%APPVEYOR_BUILD_FOLDER%\install\share\rd

before_test:
  - cmd: echo %PATH%

test_script:
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testDeadState.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testFSMBuilder.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testFSM.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testGameState.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testInitState.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testMentalMap.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testMockAudioManager.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testMockInputManager.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testMockRobotManager.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testProcessorImageEventListener.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testYarpNetworkManager.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testSDLAudioManager.exe"'
  - cmd: '"%APPVEYOR_BUILD_FOLDER%\build\bin\%CONFIGURATION%\testRobotDevastation.exe"'
