# Generated by "yarp cmake" & Juan G. Victores 2014

cmake_minimum_required(VERSION 2.6)

set(KEYWORD "RdServerLib")

find_package(YARP REQUIRED)
list(APPEND CMAKE_MODULE_PATH ${YARP_MODULE_PATH})

# Search for source code.
file(GLOB folder_source *.cpp *.cc *.c)
file(GLOB folder_header *.h *.hpp)
source_group("Source Files" FILES ${folder_source})
source_group("Header Files" FILES ${folder_header})

# Automatically add include directories if needed.
foreach(header_file ${folder_header})
  get_filename_component(p ${header_file} PATH)
  include_directories(${p})
endforeach(header_file ${folder_header})

# Include any directories needed for YARP
include_directories(${YARP_INCLUDE_DIRS})
include_directories(${RD_INCLUDE_DIRS})


# Set up lib
if (folder_source)
  add_library(${KEYWORD} ${folder_source} ${folder_header})
  target_link_libraries(${KEYWORD} ${YARP_LIBRARIES} ${RD_LIBRARIES})
    install(TARGETS ${KEYWORD} DESTINATION lib)
else (folder_source)
  message(FATAL_ERROR "No source code files found. Please add something")
endif (folder_source)


# Exporting dependencies for RDConfig.cmake quite manually for now...
#set(RD_INCLUDE_DIRS ${RD_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "appended header dirs") # done in parent
set(RD_LIBRARIES ${RD_LIBRARIES} ${KEYWORD} CACHE INTERNAL "appended libraries") # Not for now as it is a header

